mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with static canberra distance")
text(mds1[,1], mds1[,2], labels(d), cex=1.8)
d <- dist(log_static_and_dynamic[sample(1:165, 165),], method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with static canberra distance")
text(mds1[,1], mds1[,2], labels(d), cex=1.8)
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=1.8)
load_average
load_average$Factor1
load_average[,1]
load_average[,2]
load_average[,3]
load_average[,2]
load_average[1,]
load_average[,1]
hist(load_average[,1])
hist(load_average[,2])
plot(load_average,type="n")
fit_fact_average <- factanal(log_average[,1:165], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
plot(-load_average,type="n")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
load_average
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
plot(load_average,type="n", main = "factor 1 and 2, static space")
text(load_average,labels=names(log_average[,1:165]),cex=1.6)
fit_fact_average <- factanal(log_average[,1:165], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(3, 4)]
plot(load_average,type="n", main = "factor 3 and 4, static space")
text(load_average,labels=names(log_average[,1:165]),cex=1.6)
fit_fact_average <- factanal(log_average[,1:165], 5, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(2, 5)]
plot(load_average,type="n", main = "factor 2 and 5, static space")
text(load_average,labels=names(log_average[,1:165]),cex=1.6)
fit_fact_average <- factanal(log_average[,1:165], 2, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 2 and 5, static space")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
fit_fact_average <- factanal(log_average[,1:165], 3, rotation="varimax")
print(fit_fact_average, digits=2, cutoff=.12, sort=TRUE)
load_average <- fit_fact_average$loadings[,c(1, 2)]
plot(load_average,type="n", main = "factor 2 and 5, static space")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
load_average <- fit_fact_average$loadings[,c(1, 3)]
plot(load_average,type="n", main = "factor 2 and 5, static space")
text(load_average,labels=names(log_average[,1:165]),cex=.6)
d <- dist(log_static_and_dynamic[sample(1:165, 165),], method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=1.8)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=.8)
d <- dist(log_static_and_dynamic[sample(1:165, 165),1:165], method = "euclidean") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=.8)
d <- dist(log_static_and_dynamic[sample(1:165, 165),1:165], method = "canberra") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=.8)
d <- dist(raw_average[sample(1:165, 165),], method = "canberra") # distance matrix - "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski"
mds1 = cmdscale(d, k=2)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=.8)
plot(mds1[,1], mds1[,2], type = "n", xlab = "", ylab = "", axes = FALSE,
main = "cmdscale with log static + dynamic euclidean distance")
text(mds1[,1], mds1[,2], labels(d), cex=.6)
likert_ow_friend = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/likert_no_fam_friend_oneword_2_december_JSLD.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
likert_ow_boat = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/likert_no_fam_boat_oneword_9_december_FUNU.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
likert_ow_friend = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/likert_no_fam_friend_oneword_2_december_JSLD.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
likert_ow_snowman = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/likert_no_fam_snowman_oneword_9_december_FINA.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
likert_ow_sundaes = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/likert_no_fam_sundaes_oneword_9_december_LSUN.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
colnames(likert_ow_boat)
likert_ow_friend$Answer.Likert_value_target
one_word_betting = rbind(likert_ow_boat, likert_ow_friend, likert_ow_snowman, likert_ow_sundaes)
one_word_betting$Answer.Likert_value_target
length(one_word_betting$Answer.Likert_value_target)
ms.one_word_likert <- aggregate(cbind(Answer.Likert_value_target,
Answer.Likert_value_logical,
Answer.Likert_value_foil) ~
Answer.item, data=one_word_likert, mean)
one_word_likert = rbind(likert_ow_boat, likert_ow_friend, likert_ow_snowman, likert_ow_sundaes)
ms.one_word_likert <- aggregate(cbind(Answer.Likert_value_target,
Answer.Likert_value_logical,
Answer.Likert_value_foil) ~
Answer.item, data=one_word_likert, mean)
ms.one_word_likert
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
library(plyr)
library(reshape2)
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
favorite <- read.csv("forced_choice_no_fam_6random_count_ALLS.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
count_compliant <- favorite$Answer.manip_check_target == "\"2\"" & favorite$Answer.manip_check_dist == "\"1\""
setwd("~/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data")
favorite <- read.csv("forced_choice_no_fam_6random_count_ALLS.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
least_favorite <- read.csv("forced_choice_no_fam_4random_count_12_january_least_LEAS.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
mixed <- read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/Spring2014/scale_6stimuli_no_fam_prior_5_april_PRIOLF.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
mixed$target <- mixed$Answer.choice=="\"target\""
mixed$logical <- mixed$Answer.choice=="\"logical\""
mixed$foil <- mixed$Answer.choice=="\"foil\""
least_favorite$target <- least_favorite$Answer.choice=="\"target\""
least_favorite$logical <- least_favorite$Answer.choice=="\"logical\""
least_favorite$foil <- least_favorite$Answer.choice=="\"foil\""
favorite$target <- favorite$Answer.choice=="\"target\""
favorite$logical <- favorite$Answer.choice=="\"logical\""
favorite$foil <- favorite$Answer.choice=="\"foil\""
mixed_fav = mixed[mixed$Answer.linguistic_framing == 7,]
mixed_lea = mixed[mixed$Answer.linguistic_framing == 8,]
ms.mixed_fav <- aggregate(cbind(target,
logical,
foil) ~
Answer.item, data=mixed_fav, sum)
ms.mixed_fav
ms.mixed_lea <- aggregate(cbind(target,
logical,
foil) ~
Answer.item, data=mixed_lea, sum)
ms.mixed_lea
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
all_studies <- rbind(mixed, favorite)
all_studies <- melt(mixed, favorite)
head(all_studies)
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.001)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.001)$lower)
library(binom)
ms <- ddply(md, .(Answer.linguistic_framing_condition, object), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.0001)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.0001)$lower)
ms
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.001)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.001)$lower)
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.01)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.01)$lower)
ms
ms.one_word_likert
ms$framing <- factor(ms$Answer.linguistic_framing_condition)
ms
levels(ms$framing) <- c("favorite","least favorite")
md <- melt(one_word_likert, measure.vars = c("Answer.Likert_value_target","Answer.Likert_value_foil","Answer.Likert_value_logical"), variable.name="object", value.name="chosen")
md
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.01)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.01)$lower)
ms
3^.5
4^.5
mean(chosen)
mean(c(1,2,5))
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
ms
one_word_likert$Answer.itemn
one_word_likert$Answer.item
table(one_word_likert$Answer.item)
one_word_likert$target = one_word_likert$Answer.Likert_value_target
one_word_likert$logical = one_word_likert$Answer.Likert_value_logical
one_word_likert$foil = one_word_likert$Answer.Likert_value_foil
one_word_likert$target = one_word_likert$Answer.Likert_value_target
one_word_likert$logical = one_word_likert$Answer.Likert_value_logical
one_word_likert$foil = one_word_likert$Answer.Likert_value_foil
ms.one_word_likert <- aggregate(cbind(target,
logical,
foil) ~
Answer.item, data=one_word_likert, mean)
ms.one_word_likert
md <- melt(one_word_likert, measure.vars = c("target","logical","foil"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
ms
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
ms
likert_regression = glm(target ~ Answer.item + logical + foil, data = one_word_likert)
summary(likert_regression)
ms$Answer.item
ms$item <- factor(ms$Answer.item)
levels(ms$item) <- c("boat","friend", "snowman", "sundae")
ggplot(ms, aes(x= framing, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Probability of choosing referent")
library(ggplot2)
ggplot(ms, aes(x= framing, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Probability of choosing referent")
ggplot(ms, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Probability of choosing referent")
one_word_betting$Answer.money_allocated_to_target
colnames(one_word_betting)
one_word_betting$Answer.money_allocated_to_target
money_allocated_to_target$Answer.Likert_value_logical
one_word_betting$Answer.Likert_value_logical
betting_no_fam_boat_oneword_8_december_LZZZ.csv
betting_no_fam_friend_oneword_1_december_AGHP.csv
betting_no_fam_snowman_oneword_8_december_LSSS.csv
betting_no_fam_sundae_oneword_8_december_BSUN.csv
one_word_boat = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/betting_no_fam_boat_oneword_8_december_LZZZ.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
one_word_friend = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/betting_no_fam_friend_oneword_1_december_AGHP.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
one_word_snowman = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/betting_no_fam_snowman_oneword_8_december_LSSS.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
one_word_sundae = read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/betting_no_fam_sundae_oneword_8_december_BSUN.csv",header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
one_word_betting = rbind(one_word_boat, one_word_friend, one_word_snowman, one_word_sundae)
one_word_betting$Answer.money_allocated_to_target
one_word_betting$money_target =  one_word_betting$Answer.money_allocated_to_target
one_word_betting$money_logical =  one_word_betting$Answer.money_allocated_to_logical
one_word_betting$money_foil =  one_word_betting$Answer.money_allocated_to_foil
md <- melt(one_word_betting, measure.vars = c("money_target","money_logical","money_foil"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
ms
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
sdc = sd(chosen)
c.cih = c + (sdc/l^.5),
c.cil = c - (sdc/l^.5))
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
sdc = sd(chosen),
c.cih = c + (sdc/l^.5),
c.cil = c - (sdc/l^.5))
ms
ms$item <- factor(ms$Answer.item)
levels(ms$item) <- c("boat","friend", "snowman", "sundae")
ggplot(ms, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Money allocated to this referent")
mLiker <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
mdL <- melt(one_word_likert, measure.vars = c("target","logical","foil"), variable.name="object", value.name="chosen")
mLiker <- ddply(mdL, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
one_word_likert$Likert_sum = one_word_likert$Answer.Likert_value_target +
one_word_likert$Answer.Likert_value_logical +
one_word_likert$Answer.Likert_value_foil
one_word_likert$target_norm = one_word_likert$target / one_word_likert$Likert_sum
one_word_likert$logical_norm = one_word_likert$logical / one_word_likert$Likert_sum
one_word_likert$foil_norm = one_word_likert$foil / one_word_likert$Likert_sum
mdL <- melt(one_word_likert, measure.vars = c("target_norm","logical_norm","foil_norm"), variable.name="object", value.name="chosen")
mLiker <- ddply(mdL, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
mLikert
mLiker
md <- melt(one_word_betting, measure.vars = c("money_target","money_logical","money_foil"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
sdc = sd(chosen),
c.cih = c + (sdc/l^.5),
c.cil = c - (sdc/l^.5))
ms$item <- factor(ms$Answer.item)
levels(ms$item) <- c("boat","friend", "snowman", "sundae")
ggplot(ms, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Money allocated to this referent")
mdL <- melt(one_word_likert, measure.vars = c("target","logical","foil"), variable.name="object", value.name="chosen")
mLiker <- ddply(mdL, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
mdL_norm <- melt(one_word_likert, measure.vars = c("target_norm","logical_norm","foil_norm"), variable.name="object", value.name="chosen")
mLiker <- ddply(mdL_norm, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
md <- melt(mixed, measure.vars = c("target","foil","logical"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(Answer.linguistic_framing_condition, object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = binom.bayes(sum(chosen),length(chosen),tol=.01)$upper,
c.cil = binom.bayes(sum(chosen),length(chosen),tol=.01)$lower)
ms$framing <- factor(ms$Answer.linguistic_framing_condition)
levels(ms$framing) <- c("favorite","least favorite")
ggplot(ms, aes(x= framing, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
#   geom_linerange(aes(ymin=c.cil,ymax=c.cih),
#                 position=position_dodge(width=.9)) +
ylab("Probability of choosing referent") +
facet_wrap(~Answer.item)
mLiker <- ddply(mdL, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
md <- melt(one_word_betting, measure.vars = c("money_target","money_logical","money_foil"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
sdc = sd(chosen),
c.cih = c + (sdc/l^.5),
c.cil = c - (sdc/l^.5))
ms$item <- factor(ms$Answer.item)
levels(ms$item) <- c("boat","friend", "snowman", "sundae")
ggplot(ms, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Money allocated to this referent")
mLiker <- ddply(mdL_norm, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
c.cih = mean(chosen) + (sd(chosen)/length(chosen)^.5),
c.cil = mean(chosen) - (sd(chosen)/length(chosen)^.5))
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
mLiker$item <- factor(mLiker$Answer.item)
levels(mLiker$item) <- c("boat","friend", "snowman", "sundae")
ggplot(mLiker, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Likert value on this referent")
head(v)
raw_difference
head(log(raw_difference))
raw_difference$happy
hist(raw_difference$happy)
raw_difference <- future_emotion - past_emotion
hist(raw_difference$happy)
hist(log(raw_difference$happy))
hist(log(raw_difference$sad))
hist(log(raw_difference$morose))
hist(raw_difference$morose)
log_difference <- log_future - log_past
max(log_difference)
head(log_difference)
min(log_difference)
log(0.000001)
base_rates
sort(base_rates)
sort(as.vector(base_rates))
rep(base_rates,2)
rep(base_rates,2)[2]
15000 / 12
15000 / 60
200*250
300*250
400*250
65*8
12000 / 15
?cluster
sort(base_rates, by = "base_freqs")
base_rates
sort(base_rates, by = "base_freqs")
sort(base_rates[1], by = "base_freqs")
base_rates[1]
base_rates[1,]
base_rates[,1]
sort(base_rates[,1], by = "base_freqs")
sort(base_rates, by = base_rates[,1])
1000/40
